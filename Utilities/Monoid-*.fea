languagesystem zyyy dflt;
languagesystem zinh dflt;
languagesystem latn dflt;
languagesystem cyrl dflt;
languagesystem grek dflt;
languagesystem kana dflt;

feature ss01 {
  sub dollar by dollar.empty;
} ss01;

feature ss02 {
  sub asterisk by asterisk.multi;
} ss02;

feature ss03 {
  sub zero by zero.dot;
} ss03;

feature ss04 {
  sub zero by zero.clear;
} ss04;

feature ss05 {
  sub one by one.base;
} ss05;

feature ss06 {
  sub three by three.boob;
} ss06;

feature ss07 {
  sub i by i.flyingdot;
  sub j by j.flyingdot;
} ss07;

feature ss08 {
  sub l by l.zstyle;
} ss08;

feature ss09 {
  sub l by l.base;
  sub r by r.base;
} ss09;

feature ss10 {
  sub w by w.straight;
  sub W by W.straight;
} ss10;

feature ss11 {
  sub j by j.long;
  sub g by g.long;
  sub y by y.long;
} ss11;

feature ss12 {
  sub four by four.triangle;
} ss12;

feature ss13 {
  sub six by six.round;
  sub nine by nine.round;
} ss13;

feature ss14 {
  sub [Aacute Abreve Acircumflex Adieresis Agrave Amacron Aring Atilde Cacute Ccaron Ccircumflex Cdotaccent Dcaron Eacute Ebreve Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Gbreve Gcircumflex Gdotaccent Hcircumflex Iacute Ibreve Icircumflex Idieresis Idotaccent Igrave Imacron Itilde Jcircumflex Lacute Nacute Ncaron Ntilde Oacute Obreve Ocircumflex Odieresis Ograve Ohungarumlaut Omacron Otilde Racute Rcaron Sacute Scaron Scircumflex Tcaron Uacute Ubreve Ucircumflex Udieresis Ugrave Uhungarumlaut Umacron Uring Utilde Wcircumflex Yacute Ycircumflex Ydieresis Zacute Zcaron Zdotaccent uni0200 uni0202 uni0204 uni0206 uni0208 uni020A uni020C uni020E uni0210 uni0212 uni0214 uni0216] by [Aacute.sq Abreve.sq Acircumflex.sq Adieresis.sq Agrave.sq Amacron.sq Aring.sq Atilde.sq Cacute.sq Ccaron.sq Ccircumflex.sq Cdotaccent.sq Dcaron.sq Eacute.sq Ebreve.sq Ecaron.sq Ecircumflex.sq Edieresis.sq Edotaccent.sq Egrave.sq Emacron.sq Gbreve.sq Gcircumflex.sq Gdotaccent.sq Hcircumflex.sq Iacute.sq Ibreve.sq Icircumflex.sq Idieresis.sq Idotaccent.sq Igrave.sq Imacron.sq Itilde.sq Jcircumflex.sq Lacute.sq Nacute.sq Ncaron.sq Ntilde.sq Oacute.sq Obreve.sq Ocircumflex.sq Odieresis.sq Ograve.sq Ohungarumlaut.sq Omacron.sq Otilde.sq Racute.sq Rcaron.sq Sacute.sq Scaron.sq Scircumflex.sq Tcaron.sq Uacute.sq Ubreve.sq Ucircumflex.sq Udieresis.sq Ugrave.sq Uhungarumlaut.sq Umacron.sq Uring.sq Utilde.sq Wcircumflex.sq Yacute.sq Ycircumflex.sq Ydieresis.sq Zacute.sq Zcaron.sq Zdotaccent.sq uni0200.sq uni0202.sq uni0204.sq uni0206.sq uni0208.sq uni020A.sq uni020C.sq uni020E.sq uni0210.sq uni0212.sq uni0214.sq uni0216.sq];
} ss14;

feature calt {

  # ¯\_(ツ)_/¯
  sub macron backslash' underscore by backslash.shrug;
  sub parenleft' uni30C4 by parenleft.shrug;
  sub uni30C4 parenright' by parenright.shrug;
  sub underscore slash' macron by slash.shrug;

  # <!--
  ignore sub less' exclam hyphen hyphen hyphen;
  ignore sub less exclam' hyphen hyphen hyphen;
  ignore sub less exclam hyphen' hyphen hyphen;
  ignore sub less exclam hyphen hyphen' hyphen;
  ignore sub less exclam hyphen hyphen hyphen';
  sub less' exclam hyphen hyphen by larsenwork5;
  sub larsenwork5 exclam' hyphen hyphen by larsenwork5;
  sub larsenwork5 larsenwork5 hyphen' hyphen by larsenwork5;
  sub larsenwork5 larsenwork5 larsenwork5 hyphen' by commentstart;

  # <--
  ignore sub less' hyphen hyphen hyphen;
  sub less' hyphen hyphen by larsenwork3;
  sub larsenwork3 hyphen' hyphen by larsenwork3;
  sub larsenwork3 larsenwork3 hyphen' by ligaarrowleftlong;

  # -->
  sub hyphen' hyphen greater by larsenwork;
  sub larsenwork hyphen' greater by larsenwork;
  sub larsenwork larsenwork greater' by ligaarrowrightlong;

  # <<-
  ignore sub less' less hyphen hyphen;
  ignore sub less less' hyphen hyphen;
  sub less' less hyphen by larsenwork1;
  sub larsenwork1 less' hyphen by larsenwork1;
  sub larsenwork1 larsenwork1 hyphen' by ligaarrowlefttwoheads;

  # ->>
  ignore sub hyphen' greater greater greater;
  ignore sub hyphen' hyphen greater greater;
  ignore sub hyphen hyphen' greater greater;
  ignore sub hyphen hyphen greater' greater;
  sub hyphen' greater greater by larsenwork1;
  sub larsenwork1 greater' greater by larsenwork1;
  sub larsenwork1 larsenwork1 greater' by ligaarrowrighttwoheads;

  # <-
  sub less' hyphen by larsenwork2;
  sub larsenwork2 hyphen' by arrowleft.liga;

  # ->
  sub hyphen' greater by larsenwork;
  sub larsenwork greater' by arrowright.liga;

  # !==
  sub exclam' equal equal by larsenwork1;
  sub larsenwork1 equal' equal by larsenwork1;
  sub larsenwork1 larsenwork1 equal' by notequaltypeliga;

  # !=
  sub exclam' equal by larsenwork2;
  sub larsenwork2 equal' by notequalliga;

  # <=>
  sub less' equal greater by larsenwork9;
  sub larsenwork9 equal' greater by larsenwork9;
  sub larsenwork9 larsenwork9 greater' by lessequalgreater;

  # <==>
  sub less' equal equal greater by larsenwork10;
  sub larsenwork10 equal' equal greater by larsenwork10;
  sub larsenwork10 larsenwork10 equal' greater by larsenwork10;
  sub larsenwork10 larsenwork10 larsenwork10 greater' by lessequalequalgreater;

  # ==>
  ignore sub greater' equal equal greater;
  ignore sub greater equal' equal greater;
  ignore sub greater equal equal' greater;
  ignore sub greater equal equal greater';
  ignore sub equal' equal equal greater;
  ignore sub equal equal' equal greater;
  ignore sub equal equal equal' greater;
  ignore sub equal equal equal greater';
  sub equal' equal greater by larsenwork5;
  sub larsenwork5 equal' greater by larsenwork5;
  sub larsenwork5 larsenwork5 greater' by rightarrowequallong;

  # <==
  sub less' equal equal by larsenwork6;
  sub larsenwork6 equal' equal by larsenwork6;
  sub larsenwork6 larsenwork6 equal' by leftarrowequallong;

  # =:=
  sub equal' colon equal by larsenwork7;
  sub larsenwork7 colon' equal by larsenwork7;
  sub larsenwork7 larsenwork7 equal' by equalcolonequal;

  # :=
  sub colon equal' by equal.after;

  # <=
  ignore sub less' less equal;
  ignore sub less less' equal;
  ignore sub less less equal';
  sub less' equal by larsenwork3;
  sub larsenwork3 equal' by lessequalliga;

  # >>=
  sub greater' greater equal by larsenwork8;
  sub larsenwork8 greater' equal by larsenwork8;
  sub larsenwork8 larsenwork8 equal' by greatergreaterequal;

  # =<<
  sub equal' less less by larsenwork8;
  sub larsenwork8 less' less by larsenwork8;
  sub larsenwork8 larsenwork8 less' by equallessless;

  # >=
  sub greater' equal by larsenwork4;
  sub larsenwork4 equal' by greaterequalliga;

  # =>
  sub equal' greater by larsenwork2;
  sub larsenwork2 greater' by ligaequalarrow;

  # -=
  sub hyphen' equal by hyphen.operator;

  # --
  sub hyphen' hyphen by hyphen.more;
  sub hyphen.more hyphen' by hyphen.more;

  # ___
  sub underscore' underscore underscore by underscore.more;
  sub underscore.more underscore' underscore by underscore.more;
  sub underscore.more underscore.more underscore' by underscore.more;

  # __
  sub underscore' underscore by underscore.2l;
  sub underscore.2l underscore' by underscore.2r;

  # mm
  ignore sub m' m m;
  ignore sub m m' m;
  ignore sub m m m';
  sub m' m by larsenwork;
  sub larsenwork m' by mm;

  # &&
  ignore sub ampersand' ampersand ampersand;
  ignore sub ampersand ampersand' ampersand;
  ignore sub ampersand ampersand ampersand';
  sub ampersand' ampersand by ampamp;
  sub ampamp ampersand' by larsenwork6;

  # .&
  sub period ampersand' by ampersand.method;

  # *.
  sub asterisk' period by asterisk.period;

  # ||
  ignore sub bar' bar bar;
  ignore sub bar bar' bar;
  ignore sub bar bar bar';
  sub bar' bar by bar1;
  sub bar1 bar' by bar2;

  # !!
  ignore sub exclam' exclam exclam;
  ignore sub exclam exclam' exclam;
  ignore sub exclam exclam exclam';
  sub exclam' exclam by exclam.2l;
  sub exclam.2l exclam' by exclam.2r;

  # ::
  ignore sub colon' colon colon;
  ignore sub colon colon' colon;
  ignore sub colon colon colon';
  sub colon' colon by colon.2l;
  sub colon.2l colon' by colon.2r;

  # ...
  ignore sub period' period period period;
  ignore sub period period' period period;
  ignore sub period period period' period;
  ignore sub period period period period';
  sub period' period period by larsenwork;
  sub larsenwork period' period by larsenwork;
  sub larsenwork larsenwork period' by period.x3;

  # ..<
  sub period' period less by larsenwork;
  sub larsenwork period' less by larsenwork;
  sub larsenwork larsenwork less' by rangeless;

  # ..
  sub period' period by period.2l;
  sub period.2l period' by period.2r;

  # >>
  ignore sub greater' greater greater;
  ignore sub greater greater' greater;
  ignore sub greater greater greater';
  sub greater' greater by greater1;
  sub greater1 greater' by greater2;

  # <<
  ignore sub less' less less;
  ignore sub less less' less;
  ignore sub less less less';
  sub less' less by less1;
  sub less1 less' by less2;

  # //
  ignore sub slash' slash slash;
  ignore sub slash slash' slash;
  ignore sub slash slash slash';
  ignore sub colon slash' slash;
  sub slash' slash by larsenwork;
  sub larsenwork slash' by ligadoubleslash;

  # /*
  sub slash asterisk' by asterisk.commentstart;

  # /**
  sub asterisk.commentstart asterisk' by asterisk.commentstart;

  # */
  sub asterisk' slash by asterisk.commentend;

  # =
  sub space equal' space by equal.wide;

} calt;
